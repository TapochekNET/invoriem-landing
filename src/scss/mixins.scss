@mixin font($font_name, $file_name, $weight, $style) {

    @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
    }
}

@mixin adaptiveProp($property: null, $startSize: null, $minSize: null, $widthFrom: $containerWidth, $widthTo: $minWidth, $type: 1) {
    
    $addSize: $startSize - $minSize;
    @if $type==1{
        #{$property}: $startSize + px;
        @media (max-width: #{$widthFrom + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{$widthFrom - $widthTo}));
        }
        @media (max-width: #{$widthTo + px}) {
            #{$property}: $minSize + px;
        }
    }
    @else if $type==2{
        #{$property}: $startSize+px;
        @media (min-width: #{$widthFrom + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{$widthFrom - $widthTo}));
        }
        @media (min-width: #{$widthTo + px}) {
            #{$property}: $minSize + px;
        }
    }
    @else{
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / #{$widthFrom - $widthTo}));
    }
}

@function prc($pxOne, $pxTwo) {
    $result: calc(($pxOne / $pxTwo) * 100%);
    @return $result;
}

@function rem($px) {
    $result: calc($px / 16) + rem;
    @return $result;
}

@function em($px1, $px2: 16) {
    $result: calc($px1 / $px2) + em;
    @return $result;
}
